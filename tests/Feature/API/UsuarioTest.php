<?php

namespace Tests\Feature\API;

use App\Models\Usuarios;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;
use JWTAuth;

class UsuarioTest extends TestCase
{
    protected $usuario;
    protected $token;
    protected $header;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->usuario = Usuarios::where('cpf', '04754826973')->first();
        $this->token = JWTAuth::fromUser($this->usuario);
        $this->header = [
            'Authorization' => "bearer {$this->token}",
            'Content-Type' => 'application/json',
            'Accept' => 'application/json'
        ];
    }

    /**
     * @return array[]
     */
    public function rotasAutenticacaoProvider()
    {
        return [
            "listarTodosOsUsuarios" => [
                "method" => "GET",
                "url" => "api/usuarios",
                "status" => 200
            ],
            "exibirPerfilCompleto" => [
                "method" => "GET",
                "url" => "api/usuarios/me/400",
                "status" => 200
            ]
        ];
    }

    /**
     * @param $method
     * @param $url
     * @param $status
     * @dataProvider rotasSemAutenticacaoProvider
     */
    public function testRotasSemAutenticacao($method, $url, $status)
    {
        $response = $this->json($method, $url, []);

        $response->assertStatus($status);
    }


    /**
     * @return array[]
     */
    public function rotasSemAutenticacaoProvider()
    {
        return [
            "listarTodosOsUsuarios" => [
                "method" => "GET",
                "url" => "api/usuarios",
                "status" => 401
            ],
            "exibirPerfilCompleto" => [
                "method" => "GET",
                "url" => "api/usuarios/me/400",
                "status" => 401
            ]
        ];
    }

    /**
     * @param $method
     * @param $url
     * @param $status
     * @dataProvider rotasAutenticacaoProvider
     */
    public function testRotasComAutenticacao($method, $url, $status)
    {
        $response = $this->json($method, $url, [], $this->header);

        $response->assertStatus($status);
    }

    public function testAutenticacaoUsuario()
    {
        $header = [
            'Content-Type' => 'application/json',
            'Accept' => 'application/json'
        ];
        $payload = [
            'usuario' => '14395708846',
            'senha' => 'teste.homologacao123'
        ];

        $response = $this->postJson('api/login', $payload, $header);

        $response->assertStatus(200);
    }

    public function testEstruturaJsonDoPerfilCompletoUsuario()
    {
        $response = $this->get('api/usuarios/me/400', $this->header);

        $response->assertStatus(200);
        $response->assertJsonStructure([
            "message",
            "data" => [
                "usuario" => [
                    "id", "cpf", "nome", "data_expiracao", "email", "coligada", "status", "id_ut_cc", "ut_cc",
                        "perfil", "possui_ad"
                ],
                "perfil" => [
                    "id", "nome", "descricao"
                ],
                "permissoes" => [
                    "data" => [
                        "*" => [
                            "id", "regra", "regras" => [
                                "id", "nome", "descricao", "secao"
                            ]
                        ],
                    ]
                ],
                "ut" => [
                    "id", "numero_ut", "descricao", "numero_coligada", "cidade", "status", "ano_mes_inicio",
                    "ano_mes_fim", "negocio_bu", "regional", "tipo_despesa", "regiao", "segmento",
                    "grupo_cliente"
                ],
                "gestores" => [
                    "*" => [
                        "data_inicio", "tipo_gestor", "id_gestor" => [
                            "cpf", "nome", "data_expiracao", "email", "coligada", "status", "id_ut_cc",
                            "ut_cc", "possui_ad", "perfil"
                        ],
                        "id_ut_cc", "data_fim"
                    ],
                ]
            ],
            "status"
        ]);
    }
}
